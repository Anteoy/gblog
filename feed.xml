<?xml version="1.0" encoding="UTF-8"?><rss version="2.0">
  <channel>
    <title>ant.eoy</title>
    <link>http://localhost:9899/</link>
    <description>a Simple Static Site Generator</description>
    <managingEditor>anteoy@gmail.com (anteoy)</managingEditor>
    <pubDate>Tue, 27 Dec 2016 21:28:59 +0800</pubDate>
    <item>
      <title>git branch</title>
      <link>http://localhost/2016/12/27/git-branch.html</link>
      <description>&lt;h3 id=&#34;从git拉取指定分支&#34;&gt;从git拉取指定分支&lt;/h3&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;先clone下来&#xA;&lt;code&gt;git clone https://git.coding.net/zhoudafu/gblog.git&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;增加远程仓库（此步可省略，若添加远层仓库可参考）&#xA;&lt;code&gt;git remote add origin https://git.coding.net/zhoudafu/gblog.git&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;fetch下分支代码&#xA;&lt;code&gt;git fetch origin coding-pages&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;使用checkout切换分支&#xA;&lt;code&gt;git checkout -b coding-pages origin/coding-pages&lt;/code&gt;&lt;br /&gt;&#xA;&lt;code&gt;分支 gh-pages 设置为跟踪来自 origin 的远程分支 coding-pages。切换到一个新分支 &#39;coding-pages&#39;&lt;/code&gt;&#xA;注：创建分支： git branch mybranch&#xA;        切换分支： git checkout mybranch&#xA;        创建并切换分支： git checkout -b mybranch&lt;/li&gt;&#xA;&lt;li&gt;使用git status,add,commit,push origin gh-pages正常提交&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;h3 id=&#34;本地创建分支并提交到远程分支&#34;&gt;本地创建分支并提交到远程分支&lt;/h3&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;从已有的分支创建新的分支(如从master分支),创建一个gh-pages分支，执行完成自动切换到gh-pages分支，可使用git branch查看和切换&#xA;&lt;code&gt;git checkout -b coding-pages&lt;/code&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;提交到远程仓库&#xA;&lt;code&gt;git push origin coding-pages&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3 id=&#34;后记&#34;&gt;后记&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;在我使用pugo push时 ，使用本地新建分支再提交到远程&lt;/em&gt;&#xA;&lt;code&gt;EROR|12-27 20:52:07.7178|Git|Fail|warning: push.default 尚未设置，它的默认值在 Git 2.0 已从 &#39;matching&#39;&#xA;变更为 &#39;simple&#39;。若要不再显示本信息并保持传统习惯，进行如下设置：&#xA;git config --global push.default matching&#xA;若要不再显示本信息并从现在开始采用新的使用习惯，设置：&#xA;git config --global push.default simple&#xA;当 push.default 设置为 &#39;matching&#39; 后，git 将推送和远程同名的所有&#xA;本地分支。&#xA;从 Git 2.0 开始，Git 默认采用更为保守的 &#39;simple&#39; 模式，只推送当前&#xA;分支到远程关联的同名分支，即 &#39;git push&#39; 推送当前分支。&#xA;参见 &#39;git help config&#39; 并查找 &#39;push.default&#39; 以获取更多信息。&#xA;（&#39;simple&#39; 模式由 Git 1.7.11 版本引入。如果您有时要使用老版本的 Git，&#xA;为保持兼容，请用 &#39;current&#39; 代替 &#39;simple&#39;）&#xA;fatal: 当前分支 coding-pages 没有对应的上游分支。&#xA;为推送当前分支并建立与远程上游的跟踪，使用&#xA;git push --set-upstream origin coding-pages&#xA;``&#xA;*后在gitPro目录下使用*&#xA;&lt;/code&gt; git push --set-upstream origin coding-pages```&#xA;回执&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;Delta compression using up to 4 threads.压缩对象中: 100% (23/23), 完成.写入对象中: 100% (29/29), 343.86KiB | 0 bytes/s, 完成.Total 29 (delta 5), reused 0 (delta 0)To https://git.coding.net/zhoudafu/gblog.git 6363c13..5f88c38  coding-pages -&amp;gt; coding-pages&#xA;分支 coding-pages 设置为跟踪来自 origin 的远程分支 coding-pages&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;重新执行未果报错&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;EROR|12-27 20:57:08.0745|Git|Fail|exit status 1&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;在这里应该是pugo内部调用处理有差异，使用第一种分支操作即可成功提交。&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;</description>
      <pubDate>Tue, 27 Dec 2016 21:26:41 +0000</pubDate>
    </item>
    <item>
      <title>Welcome</title>
      <link>http://localhost/2016/3/25/welcome.html</link>
      <description>&lt;p&gt;When you read the post, &lt;code&gt;PuGo&lt;/code&gt; is running successfully.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This post is generated from file &lt;code&gt;source/welcome.md&lt;/code&gt;. You can learn it and try to write your own article with following guide.&lt;/p&gt;&#xA;&#xA;&lt;h4 id=&#34;front-matter&#34;&gt;Front-Matter&lt;/h4&gt;&#xA;&#xA;&lt;p&gt;Post&amp;rsquo;s front-matter, including title, author etc, are created by first code section with block &lt;strong&gt;```toml &amp;hellip;.. ```&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;# post title, required&#xA;title = &amp;quot;Welcome&amp;quot;&#xA;&#xA;# post slug, use to build permalink and url, required&#xA;slug = &amp;quot;welcome&amp;quot;&#xA;&#xA;# post description, show in header meta&#xA;desc = &amp;quot;welcome to try pugo site generator&amp;quot;&#xA;&#xA;# post created time, support&#xA;# 2015-11-28, 2015-11-28 12:28, 2015-11-28 12:28:38&#xA;date = &amp;quot;2015-12-20 12:20:20&amp;quot;&#xA;&#xA;# post updated time, optional&#xA;# if null, use created time&#xA;update_date = &amp;quot;2015-12-20 12:30:30&amp;quot;&#xA;&#xA;# author identifier, reference to meta [[author]], required&#xA;author = &amp;quot;pugo&amp;quot;&#xA;&#xA;# tags, optional&#xA;tags = [&amp;quot;pugo&amp;quot;]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4 id=&#34;content&#34;&gt;Content&lt;/h4&gt;&#xA;&#xA;&lt;p&gt;The content is data after first block. All words will be parsed as markdown content.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;&#xA;When you read the post, `PuGo` is running successfully.&#xA;&#xA;This post is generated from file `source/welcome.md`. You can learn it and try to write your own article with following guide.&#xA;&#xA;...... (markdown content)&#xA;&#xA;Markdown is a lightweight markup language with plain text formatting syntax designed&#xA;so that it can be converted to HTML and many other formats using a tool by the same name.&#xA;Markdown is often used to format readme files, for writing messages in online discussion forums,&#xA;and to create rich text using a plain text editor.&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
      <pubDate>Fri, 25 Mar 2016 12:20:20 +0000</pubDate>
    </item>
  </channel>
</rss>